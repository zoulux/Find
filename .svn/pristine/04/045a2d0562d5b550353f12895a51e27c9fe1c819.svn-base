package com.zgrjb.find.ui;

import java.io.File;
import java.io.IOException;

import com.zgrjb.find.R;
import com.zgrjb.find.bean.FlagData;
import com.zgrjb.find.file_handle.HandleFile;

import android.R.integer;
import android.annotation.SuppressLint;
import android.app.Activity;
import android.content.Context;
import android.content.Intent;
import android.graphics.Bitmap;
import android.graphics.BitmapFactory;
import android.net.Uri;
import android.os.Bundle;
import android.os.Environment;
import android.provider.MediaStore;
import android.util.DisplayMetrics;
import android.view.View;
import android.view.View.OnClickListener;
import android.widget.Button;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.Toast;

public class RegistActivity extends BaseActivity implements OnClickListener {
	private Button ensureRegistButton;
	private Button cancleRegistButton;
	private LinearLayout linearLayout;
	private static final int PHOTO_REQUEST_TAKEPHOTO = 1;// 拍照
	private static final int PHOTO_REQUEST_CUT = 2;// 结果
	private HandleFile handleFile;
	private ImageView imageView;
	private Bitmap photo;
	private final static String ALBUM_PATH = Environment
			.getExternalStorageDirectory() + "/Find/Picture_Regist/";
	private File tempFile=new File(Environment
			.getExternalStorageDirectory() + "/Find/Picture_Regist/p1.jpg/");

	@SuppressLint("SdCardPath")
	@Override
	protected void onCreate(Bundle savedInstanceState) {
		super.onCreate(savedInstanceState);
		setContentView(R.layout.activity_regist);
		File file = new File("/sdcard/Find/Picture_Regist/");
        if (!file.exists()) {
        	file.mkdirs();
		}
		init();
		showTitleText("注册");
		
		

	}

	public void init() {
		ensureRegistButton = (Button) this.findViewById(R.id.ensureRegist);
		linearLayout = (LinearLayout) this
				.findViewById(R.id.LinerLayoutToImageView);
		cancleRegistButton = (Button) this.findViewById(R.id.cancleRegist);
		imageView = (ImageView) this.findViewById(R.id.pictureRegist);
		ensureRegistButton.setOnClickListener(this);
		linearLayout.setOnClickListener(this);
		cancleRegistButton.setOnClickListener(this);
		handleFile = new HandleFile(this, ALBUM_PATH);
		imageView.setImageBitmap(getBitmap(this, ALBUM_PATH + "p1.jpg"));
	}

	@Override
	protected void onActivityResult(int requestCode, int resultCode, Intent data) {
		switch (requestCode) {
		case PHOTO_REQUEST_TAKEPHOTO:// 选择拍照时调用
			startPhotoZoom(Uri.fromFile(tempFile));
			break;
		case PHOTO_REQUEST_CUT:
			if (data != null) {
				Bitmap bmpBitmap = getBitmap(this, ALBUM_PATH + "p1.jpg");
				imageView.setImageBitmap(bmpBitmap);
				sentPicToNext(data);
			}
			break;
		}
		super.onActivityResult(requestCode, resultCode, data);
	}

	@Override
	public void onClick(View v) {
		if (v == ensureRegistButton) {
			
			Intent intent = new Intent(this, LogInActivity.class);
			startActivity(intent);
			finish();

		} else if (v == cancleRegistButton) {
			Intent intent = new Intent(RegistActivity.this, LogInActivity.class);
			startActivity(intent);
			finish();

		} else if (v == linearLayout) {
			Intent cameraintent = new Intent(MediaStore.ACTION_IMAGE_CAPTURE);
			// 指定调用相机拍照后照片的储存路径
			cameraintent.putExtra(MediaStore.EXTRA_OUTPUT,
					Uri.fromFile(tempFile));
			startActivityForResult(cameraintent, PHOTO_REQUEST_TAKEPHOTO);
		}
	}

	/**
	 * 将指定路径的图片交给Bitmap来处理
	 * 
	 * @param context
	 *            上下文
	 * @param resName
	 *            是获取图片的路径
	 * @return
	 */
	public static Bitmap getBitmap(Context context, String resName) {
		try {
			return BitmapFactory.decodeFile(resName);
		} catch (Exception e) {
			return null;
		}
	}

	/**
	 * 开始裁切图片
	 * 
	 * @param uri
	 */
	private void startPhotoZoom(Uri uri) {
		Intent intent = new Intent("com.android.camera.action.CROP");
		intent.setDataAndType(uri, "image/*");
		// crop为true是设置在开启的intent中设置显示的view可以剪裁
		intent.putExtra("crop", "true");
		// aspectX aspectY 是宽高的比例
		intent.putExtra("aspectX", 1);
		intent.putExtra("aspectY", 1);

		// outputX,outputY 是剪裁图片的宽高
		intent.putExtra("outputX", 300);
		intent.putExtra("outputY", 300);
		intent.putExtra("return-data", true);
		intent.putExtra("noFaceDetection", true);
		startActivityForResult(intent, PHOTO_REQUEST_CUT);
	}
/**
 * 将裁切后的图片显示在Regist目录上
 * @param picdata
 */
	private void sentPicToNext(Intent picdata) {
		Bundle bundle = picdata.getExtras();
		if (bundle != null) {
			photo = bundle.getParcelable("data");
			if (photo == null) {
				imageView.setImageResource(R.drawable.ic_launcher);
			} else {
				try {
					handleFile.savePictureFile(photo, "p1.jpg");
				} catch (IOException e) {
					e.printStackTrace();
				}
				imageView.setImageBitmap(photo);
			}

		}
	}

}
